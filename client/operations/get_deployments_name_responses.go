// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fogatlas/client-go/models"
)

// GetDeploymentsNameReader is a Reader for the GetDeploymentsName structure.
type GetDeploymentsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeploymentsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDeploymentsNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDeploymentsNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeploymentsNameOK creates a GetDeploymentsNameOK with default headers values
func NewGetDeploymentsNameOK() *GetDeploymentsNameOK {
	return &GetDeploymentsNameOK{}
}

/*GetDeploymentsNameOK handles this case with default header values.

Successfully returned the deployment request
*/
type GetDeploymentsNameOK struct {
	Payload *models.Deployment
}

func (o *GetDeploymentsNameOK) Error() string {
	return fmt.Sprintf("[GET /deployments/{name}][%d] getDeploymentsNameOK  %+v", 200, o.Payload)
}

func (o *GetDeploymentsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsNameBadRequest creates a GetDeploymentsNameBadRequest with default headers values
func NewGetDeploymentsNameBadRequest() *GetDeploymentsNameBadRequest {
	return &GetDeploymentsNameBadRequest{}
}

/*GetDeploymentsNameBadRequest handles this case with default header values.

Invalid request
*/
type GetDeploymentsNameBadRequest struct {
	Payload *models.Message
}

func (o *GetDeploymentsNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /deployments/{name}][%d] getDeploymentsNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetDeploymentsNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsNameInternalServerError creates a GetDeploymentsNameInternalServerError with default headers values
func NewGetDeploymentsNameInternalServerError() *GetDeploymentsNameInternalServerError {
	return &GetDeploymentsNameInternalServerError{}
}

/*GetDeploymentsNameInternalServerError handles this case with default header values.

Generic error
*/
type GetDeploymentsNameInternalServerError struct {
	Payload *models.Message
}

func (o *GetDeploymentsNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /deployments/{name}][%d] getDeploymentsNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDeploymentsNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
