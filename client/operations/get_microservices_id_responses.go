// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fogatlas/client-go/models"
)

// GetMicroservicesIDReader is a Reader for the GetMicroservicesID structure.
type GetMicroservicesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMicroservicesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMicroservicesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetMicroservicesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMicroservicesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMicroservicesIDOK creates a GetMicroservicesIDOK with default headers values
func NewGetMicroservicesIDOK() *GetMicroservicesIDOK {
	return &GetMicroservicesIDOK{}
}

/*GetMicroservicesIDOK handles this case with default header values.

Successfully returned the microservice
*/
type GetMicroservicesIDOK struct {
	Payload *models.Microservice
}

func (o *GetMicroservicesIDOK) Error() string {
	return fmt.Sprintf("[GET /microservices/{id}][%d] getMicroservicesIdOK  %+v", 200, o.Payload)
}

func (o *GetMicroservicesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Microservice)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroservicesIDBadRequest creates a GetMicroservicesIDBadRequest with default headers values
func NewGetMicroservicesIDBadRequest() *GetMicroservicesIDBadRequest {
	return &GetMicroservicesIDBadRequest{}
}

/*GetMicroservicesIDBadRequest handles this case with default header values.

Invalid request
*/
type GetMicroservicesIDBadRequest struct {
	Payload *models.Message
}

func (o *GetMicroservicesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /microservices/{id}][%d] getMicroservicesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetMicroservicesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroservicesIDInternalServerError creates a GetMicroservicesIDInternalServerError with default headers values
func NewGetMicroservicesIDInternalServerError() *GetMicroservicesIDInternalServerError {
	return &GetMicroservicesIDInternalServerError{}
}

/*GetMicroservicesIDInternalServerError handles this case with default header values.

Generic error
*/
type GetMicroservicesIDInternalServerError struct {
	Payload *models.Message
}

func (o *GetMicroservicesIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /microservices/{id}][%d] getMicroservicesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMicroservicesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
