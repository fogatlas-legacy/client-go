// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fogatlas/client-go/models"
)

// GetMicroservicesReader is a Reader for the GetMicroservices structure.
type GetMicroservicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMicroservicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMicroservicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetMicroservicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMicroservicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMicroservicesOK creates a GetMicroservicesOK with default headers values
func NewGetMicroservicesOK() *GetMicroservicesOK {
	return &GetMicroservicesOK{}
}

/*GetMicroservicesOK handles this case with default header values.

Successfully returned the list of microservices
*/
type GetMicroservicesOK struct {
	Payload *models.GetMicroservicesOKBody
}

func (o *GetMicroservicesOK) Error() string {
	return fmt.Sprintf("[GET /microservices][%d] getMicroservicesOK  %+v", 200, o.Payload)
}

func (o *GetMicroservicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMicroservicesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroservicesBadRequest creates a GetMicroservicesBadRequest with default headers values
func NewGetMicroservicesBadRequest() *GetMicroservicesBadRequest {
	return &GetMicroservicesBadRequest{}
}

/*GetMicroservicesBadRequest handles this case with default header values.

Invalid request
*/
type GetMicroservicesBadRequest struct {
	Payload *models.Message
}

func (o *GetMicroservicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /microservices][%d] getMicroservicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMicroservicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicroservicesInternalServerError creates a GetMicroservicesInternalServerError with default headers values
func NewGetMicroservicesInternalServerError() *GetMicroservicesInternalServerError {
	return &GetMicroservicesInternalServerError{}
}

/*GetMicroservicesInternalServerError handles this case with default header values.

Generic error
*/
type GetMicroservicesInternalServerError struct {
	Payload *models.Message
}

func (o *GetMicroservicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /microservices][%d] getMicroservicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMicroservicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
